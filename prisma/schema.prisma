// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// README!
// after changes run the ff to create files:
// npx prisma generate
// npx prisma db push

generator client {
    provider = "prisma-client-js"
}

generator erd {
    provider = "prisma-erd-generator"
    output   = "../ERD.png"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// relationship - a User can have:
// one and ONLY one Discord (normalized?)
// zero or many Ticket
// zero or many Item
model User {
    id      String   @id @default(auto()) @map("_id") @db.ObjectId
    nearId  String   @unique
    discord Discord
    // username String
    // tag      String
    tickets Ticket[]
    items   Item[]

    @@map("user")
}

type Discord {
    username String
    tag      String
}

// relationship - a Ticket can have:
// one and ONLY one User
model Ticket {
    id           String    @id @default(auto()) @map("_id") @db.ObjectId
    ticketName   String
    ticketNumber Int
    isMinted     Boolean   @default(false)
    mintDate     DateTime?
    user         User      @relation(fields: [userId], references: [id])
    userId       String    @db.ObjectId

    @@map("ticket")
}

// relationship - an Item can have:
// zero or ONE User
model Item {
    id          String    @id @default(auto()) @map("_id") @db.ObjectId
    shySkullId  Int
    rarity      String
    isAvailable Boolean   @default(true)
    mintDate    DateTime?
    user        User?     @relation(fields: [userId], references: [id])
    userId      String?   @db.ObjectId

    @@map("item")
}
